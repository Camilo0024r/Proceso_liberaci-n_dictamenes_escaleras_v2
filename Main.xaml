<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.tokenAPI_NS="[&quot;Bearer &quot; +&quot;eyJraWQiOiJjLjU4NDU2MzEuMjAyNC0wMS0yOF8wMC0xMS0zOCIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIzOzExMjgxOCIsImF1ZCI6WyJBOTc1QkRBNi04MkUwLTQ5NzMtQTYwMC0wNzkxMkQwNzc1RTM7NTg0NTYzMSIsIjYzYmViMWM2NmIzZGI1N2YzMzMyMTA0NmZkZTM3ODVjN2NiOGVmNWUzZDcxMDQ1MzViNTFlYzVkYmE4ODMwYmMiXSwic2NvcGUiOlsicmVzdF93ZWJzZXJ2aWNlcyIsInJlc3RsZXRzIl0sImlzcyI6Imh0dHBzOi8vc3lzdGVtLm5ldHN1aXRlLmNvbSIsIm9pdCI6MTcxMDg4MDY3NiwiZXhwIjoxNzEwODg0Mjc2LCJpYXQiOjE3MTA4ODA2NzYsImp0aSI6IjU4NDU2MzEuYS1hLjFjMTlmYWY1LTZiYmEtNGU5My05NmIwLWYzMmY1NzA2M2EwOV8xNzEwODgwNjc2Mjg5LjE3MTA4ODA2NzYyODkifQ.fXfmCBEyli_zbLTDTGDFAzoBcOahMWwUKGM7fKmbbjaS8Y6Gi_smPwPX1z18Llk4iLYDXXizPNu-Ocppa-eOq1Lt9srjWAYdAtZeA3HgzwyW7ngr70uzN1MJ_syFrWoC9PGwYu8WBKUFLx1hrxHzW-K0gJeAn6vWOIm-ztrWfMqn1HMgTVkSLwHKn1R9yPYDqjku_JwtZKiuFBgBHl3IFdm6tlBWGW9Cm2fjqnMDYVMARlwg8C2NNOFAgVoDum1-cXV0FKQU0zttz7AyOCL5liN7sd4Q_HEIXOzr2jSv6mzRlBUkwTld1SAZUDY9KtzAiiSHLFvZu8E6CDFdKAigPo8XfU8wfi2cK2FthSsNPR2yoBCb1HXWNLmgz7jaR5akK4ioISVYmfeMd8sPkaKXJToNA5d4-Ztn4tBaLhUHuLkc0N8V0E64U6Mm16fODCoken7btWElpiX36f8QuYqXzdvClm_xmMtXsn1PByO06lgSHR4ZBjXCRUu9QbkKOgeskr4lwh4UzSAEf51sW0iVhjF6lVfJBKdwGtIMhS5Wk5RMh3dMHXP36qjBH5Eesy6C6zTr8yKRxzTVWZXT9OT5ZWt-FzUfHvJupNgtwmxTDP72Dlp7xc7BphR_rdLOsrWI98Ms9caQ6nEJ9O74lZK5MbHhAx374UyFx4sSleZMgwg&quot;]" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ubmc="clr-namespace:UiPath.BAF.Models.Connection;assembly=UiPath.OracleNetSuite" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ueabf="clr-namespace:UiPath.Excel.Activities.Business.Filter;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="tokenAPI_NS" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:Annotation.AnnotationText>UPTF00000088eyI8SGVscExpbms+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8SW5pdGlhbFRvb2x0aXA+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8VmVyc2lvbj5rX19CYWNraW5nRmllbGQiOjF9</sap2010:Annotation.AnnotationText>
  <sap:VirtualizedContainerService.HintSize>1185,709</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.IntegrationService.Activities.Runtime.Models.FilterBuilder</x:String>
      <x:String>UiPath.IntegrationService.Activities.Runtime.Models</x:String>
      <x:String>UiPath.IntegrationService.Activities.Runtime.Activities</x:String>
      <x:String>UiPath.Platform.Activities</x:String>
      <x:String>UiPath.OracleNetSuite.Enums</x:String>
      <x:String>UiPath.OracleNetSuite.Models</x:String>
      <x:String>UiPath.BAF.Models.Connection</x:String>
      <x:String>UiPath.BAF.Telemetry</x:String>
      <x:String>UiPath.BAF.Activities.ContextModel</x:String>
      <x:String>UiPath.BAF.Models</x:String>
      <x:String>UiPath.BAF.ServiceInterfaces</x:String>
      <x:String>UiPath.OracleNetSuite.Activities</x:String>
      <x:String>UiPath.BAF.Activities</x:String>
      <x:String>UiPath.BAF.Models.Entity</x:String>
      <x:String>UiPath.OracleNetSuite.com.netsuite.webservices</x:String>
      <x:String>UiPath.BAF.Models.Response</x:String>
      <x:String>Org.BouncyCastle.Utilities</x:String>
      <x:String>System.Net</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Files.Models</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Excel.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Excel.Models</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Excel</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.Excel.Activities.Business.Filter</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xml.ReaderWriter</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.IntegrationService.Activities.Runtime</AssemblyReference>
      <AssemblyReference>UiPath.OracleNetSuite</AssemblyReference>
      <AssemblyReference>UiPath.OracleNetSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OracleNetSuite.IntegrationService.Activities</AssemblyReference>
      <AssemblyReference>BouncyCastle.Crypto</AssemblyReference>
      <AssemblyReference>System.Net.Primitives</AssemblyReference>
      <AssemblyReference>System.Net.HttpListener</AssemblyReference>
      <AssemblyReference>System.Net.WebProxy</AssemblyReference>
      <AssemblyReference>System.Net.NameResolution</AssemblyReference>
      <AssemblyReference>System.Net.WebClient</AssemblyReference>
      <AssemblyReference>System.Net.Requests</AssemblyReference>
      <AssemblyReference>System.Net.ServicePoint</AssemblyReference>
      <AssemblyReference>System.Net.WebHeaderCollection</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap:VirtualizedContainerService.HintSize="1094,668" sap2010:WorkflowViewState.IdRef="Flowchart_2">
    <Flowchart.Variables>
      <Variable x:TypeArguments="njl:JObject" Name="JSON_POST" />
      <Variable x:TypeArguments="x:String" Default="{}{&#xA;  'q': 'SELECT custrecord_bit_n_factura, custrecord_bit_saldo, custrecord_bit_pagado_con, custrecord_bit_fecha_real_pago&#xA; FROM CUSTOMRECORD_BIT_REPORTE_CARTERA WHERE custrecord_bit_n_factura IN (XXXXX)'&#xA;}" Name="request" />
      <Variable x:TypeArguments="njl:JObject" Name="data_factura_json" />
      <Variable x:TypeArguments="njl:JArray" Name="convertedArrayData" />
      <Variable x:TypeArguments="x:Boolean" Name="sheetExists" />
      <Variable x:TypeArguments="sd:DataTable" Name="temp_factura" />
      <Variable x:TypeArguments="sd:DataTable" Name="invoiceRange" />
      <Variable x:TypeArguments="x:String" Default="7ed39684c305693db1ca3a985579cbef04117521fd4319dd1711a660122c1932" Name="TokenSecret" />
      <Variable x:TypeArguments="ubmc:IConnection" Name="IConnection" />
      <Variable x:TypeArguments="x:String" Name="leakedInvoiceData" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
        <av:Point x:Key="ShapeLocation">500,12.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <x:Double x:Key="Width">1060</x:Double>
        <x:Double x:Key="Height">631.0799999999999</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">530,87.5 530,157.5</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID1</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID0">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">430,267.5</av:Point>
          <av:Size x:Key="ShapeSize">200,25</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Netsuite API connection" sap:VirtualizedContainerService.HintSize="200,25" sap2010:WorkflowViewState.IdRef="Sequence_39">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Default="{}{&#xA;  'q': 'SELECT email, COUNT(*) as count FROM transaction GROUP BY email'&#xA;}" Name="queryAPI" />
          <Variable x:TypeArguments="x:Int32" Name="statusResponseAPI" />
          <Variable x:TypeArguments="x:String" Name="NEW_QUERY_API" />
          <Variable x:TypeArguments="x:String" Name="valueString" />
          <Variable x:TypeArguments="x:Int32" Default="0" Name="count" />
          <Variable x:TypeArguments="x:String" Default="Ds123456789*" Name="contra" />
          <Variable x:TypeArguments="x:String" Default="duvan.sanabria@servimeters.com" Name="email" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="1106,100" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_5" JsonObject="[JSON_POST]" JsonString="[request]" />
        <ui:InvokeCode ContinueOnError="{x:Null}" Code="' Obtener la consulta original del argumento query&#xA;Dim queryStr As String = jsonObject(&quot;q&quot;).ToString()&#xA;&#xA;' Reemplazar XXXXX con los valores de la columna &quot;FACTURA&quot; de la DataTable &quot;lote&quot;&#xA;If lote.Rows.Count &gt; 0 AndAlso lote.Columns.Contains(&quot;FACTURA&quot;) Then&#xA;    Dim valoresLote As New List(Of String)()&#xA;    For Each fila As DataRow In lote.Rows&#xA;        ' Obtener el valor de &quot;FACTURA&quot; y limpiar cualquier carácter especial&#xA;        Dim factura As String = fila(&quot;FACTURA&quot;).ToString().Trim()&#xA;        factura = factura.Replace(vbTab, &quot;&quot;) ' Eliminar tabulaciones si es necesario&#xA;        ' Agregar el valor limpio de &quot;FACTURA&quot; a la lista de valores de lote&#xA;        valoresLote.Add(&quot;'&quot; &amp; factura &amp; &quot;'&quot;)&#xA;    Next&#xA;    ' Concatenar los valores de lote con comas para formar la lista para la cláusula IN&#xA;    Dim condicionesLote As String = String.Join(&quot;, &quot;, valoresLote)&#xA;&#xA;    ' Reemplazar XXXXX con las condiciones de lote en la consulta original&#xA;    queryStr = queryStr.Replace(&quot;XXXXX&quot;, condicionesLote)&#xA;Else&#xA;    ' Si la DataTable está vacía o no contiene la columna &quot;FACTURA&quot;, no se seleccionará ningún valor&#xA;    queryStr = queryStr.Replace(&quot;XXXXX&quot;, &quot;''&quot;)&#xA;End If&#xA;&#xA;' Asignar la consulta modificada al campo &quot;q&quot; del objeto JSON&#xA;jsonObject(&quot;q&quot;) = queryStr&#xA;&#xA;' Convertir el objeto JSON a una cadena JSON&#xA;Dim modifiedJson As String = jsonObject.ToString()&#xA;&#xA;' Asignar la cadena JSON modificada a la variable &quot;query&quot;&#xA;query = modifiedJson&#xA;&#xA;' Imprimir la consulta modificada en JSON&#xA;Console.WriteLine(&quot;Consulta modificada en JSON: &quot; &amp; modifiedJson)&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="1106,205" sap2010:WorkflowViewState.IdRef="InvokeCode_4">
          <ui:InvokeCode.Arguments>
            <InArgument x:TypeArguments="njl:JObject" x:Key="jsonObject">[JSON_POST]</InArgument>
            <InArgument x:TypeArguments="sd:DataTable" x:Key="lote">[invoiceRange]</InArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="query">[request]</InOutArgument>
          </ui:InvokeCode.Arguments>
        </ui:InvokeCode>
        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="1106,131" sap2010:WorkflowViewState.IdRef="WriteLine_49" Text="[request.ToString]" />
        <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" Body="[request]" BodyFormat="application/JSON" DisplayName="HTTP Request" EnableSSLVerification="False" EndPoint="https://5845631.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql" sap:VirtualizedContainerService.HintSize="1106,111" sap2010:WorkflowViewState.IdRef="HttpClient_2" Method="POST" Result="[leakedInvoiceData]" TimeoutMS="15000">
          <ui:HttpClient.Attachments>
            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
          </ui:HttpClient.Attachments>
          <ui:HttpClient.Cookies>
            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
          </ui:HttpClient.Cookies>
          <ui:HttpClient.Headers>
            <InArgument x:TypeArguments="x:String" x:Key="Authorization">[tokenAPI_NS]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="Prefer">transient</InArgument>
          </ui:HttpClient.Headers>
          <ui:HttpClient.Parameters>
            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
          </ui:HttpClient.Parameters>
          <ui:HttpClient.UrlSegments>
            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
          </ui:HttpClient.UrlSegments>
        </ui:HttpClient>
        <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="1106,100" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_6" JsonObject="[data_factura_json]" JsonString="[leakedInvoiceData]" />
        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="1106,131" sap2010:WorkflowViewState.IdRef="WriteLine_69" Text="[data_factura_json.ToString]" />
        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1106,392" sap2010:WorkflowViewState.IdRef="CommentOut_6">
          <ui:CommentOut.Body>
            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416,273" sap2010:WorkflowViewState.IdRef="Sequence_30">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code="'Deserializar JSON&#xA;Dim jsonObject As JObject = JObject.Parse(leakedInvoiceData.ToString())&#xA;&#xA;'Acceder al array de items&#xA;Dim items As JArray = jsonObject(&quot;items&quot;)&#xA;&#xA;'Recorrer los elementos dentro del array&#xA;For Each item As JObject In items&#xA;    'Acceder a los valores de cada elemento&#xA;    Dim factura As String = item(&quot;custrecord_bit_n_factura&quot;).ToString()&#xA;    Dim saldo As String = item(&quot;custrecord_bit_saldo&quot;).ToString()&#xA;    Dim nombre As String = item(&quot;custrecordbit_nombre&quot;).ToString()&#xA;&#xA;    'Hacer algo con los valores (por ejemplo, imprimirlos)&#xA;    LogMessage(&quot;Número de factura: &quot; &amp; factura)&#xA;    LogMessage(&quot;Saldo: &quot; &amp; saldo)&#xA;    LogMessage(&quot;Nombre: &quot; &amp; nombre)&#xA;Next&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="354,188" sap2010:WorkflowViewState.IdRef="InvokeCode_5">
                <ui:InvokeCode.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="leakedInvoiceData">[leakedInvoiceData]</InArgument>
                </ui:InvokeCode.Arguments>
              </ui:InvokeCode>
            </Sequence>
          </ui:CommentOut.Body>
        </ui:CommentOut>
        <Assign sap:VirtualizedContainerService.HintSize="1106,123" sap2010:WorkflowViewState.IdRef="Assign_4">
          <Assign.To>
            <OutArgument x:TypeArguments="njl:JArray">[convertedArrayData]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="njl:JArray">[CType(data_factura_json("items"), JArray)]</InArgument>
          </Assign.Value>
        </Assign>
        <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="1106,3955" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_4">
          <ueab:ExcelProcessScopeX.Body>
            <ActivityAction x:TypeArguments="ui:IExcelProcess">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1072,3845" sap2010:WorkflowViewState.IdRef="Sequence_19">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ueab:ExcelApplicationCard Password="{x:Null}" AutoSave="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="1010,3760" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" KeepExcelFileOpen="True" ReadFormatting="Default" ResizeWindow="None" WorkbookPath="C:\Users\duvan.sanabria\OneDrive - Servimeters\Documentos Uipath\ENTREGA DE INFORMES 2023.xlsx">
                  <ueab:ExcelApplicationCard.Body>
                    <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="976,3464" sap2010:WorkflowViewState.IdRef="Sequence_17">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ueab:ExcelForEachRowX DisplayName="For Each Excel Row" EmptyRowBehavior="Stop" HasHeaders="True" sap:VirtualizedContainerService.HintSize="914,3379" sap2010:WorkflowViewState.IdRef="ExcelForEachRowX_2" Range="[Excel.Sheet(&quot;Translado de Datos&quot;)]" SaveAfterEachRow="True">
                          <ueab:ExcelForEachRowX.Body>
                            <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                              <ActivityAction.Argument1>
                                <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="Fila" />
                              </ActivityAction.Argument1>
                              <ActivityAction.Argument2>
                                <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                              </ActivityAction.Argument2>
                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="880,3163" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="invoiceData" />
                                  <Variable x:TypeArguments="x:String" Name="ValidateCondition" />
                                  <Variable x:TypeArguments="x:Int32" Name="countInvoiceRange" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="[countInvoiceRange]" DataTable="[invoiceRange]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="818,3078" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                                  <ui:ForEachRow.Body>
                                    <ActivityAction x:TypeArguments="sd:DataRow">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="ItemInvoiceRange" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="784,2889" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:String" Name="variable1" />
                                          <Variable x:TypeArguments="x:Int32" Name="ItemConvertedArrayData" />
                                          <Variable x:TypeArguments="x:Int32" Name="countConvertedArrayData" />
                                          <Variable x:TypeArguments="x:Boolean" Name="valid" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:InvokeCode ContinueOnError="{x:Null}" Code="If count = invoiceRange.Rows.Count Then&#xA;   valid = True&#xA;End If" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="722,205" sap2010:WorkflowViewState.IdRef="InvokeCode_9">
                                          <ui:InvokeCode.Arguments>
                                            <InOutArgument x:TypeArguments="sd:DataTable" x:Key="invoiceRange">[invoiceRange]</InOutArgument>
                                            <InOutArgument x:TypeArguments="x:Int32" x:Key="count">[count]</InOutArgument>
                                            <OutArgument x:TypeArguments="x:Boolean" x:Key="valid">[valid]</OutArgument>
                                          </ui:InvokeCode.Arguments>
                                        </ui:InvokeCode>
                                        <If Condition="[valid]" sap:VirtualizedContainerService.HintSize="722,2599" sap2010:WorkflowViewState.IdRef="If_5">
                                          <If.Then>
                                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,133" sap2010:WorkflowViewState.IdRef="Sequence_79">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:Break sap:VirtualizedContainerService.HintSize="354,48" sap2010:WorkflowViewState.IdRef="Break_3" />
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="688,2304" sap2010:WorkflowViewState.IdRef="Sequence_80">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ForEach x:TypeArguments="njl:JToken" CurrentIndex="[countConvertedArrayData]" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="626,2219" sap2010:WorkflowViewState.IdRef="ForEach`1_11" Values="[convertedArrayData]">
                                                <ui:ForEach.Body>
                                                  <ActivityAction x:TypeArguments="njl:JToken">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="njl:JToken" Name="currentJToken" />
                                                    </ActivityAction.Argument>
                                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="592,2030" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If Condition="[ItemInvoiceRange(&quot;FACTURA&quot;).ToString() = currentJToken(&quot;custrecord_bit_n_factura&quot;).ToString()]" sap:VirtualizedContainerService.HintSize="530,1945" sap2010:WorkflowViewState.IdRef="If_3">
                                                        <If.Then>
                                                          <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,1453" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ueab:WriteCellX AutoIncrementRow="True" Cell="[Fila.ByField(&quot;SALDO&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,201" sap2010:WorkflowViewState.IdRef="WriteCellX_2" Value="[currentJToken(&quot;custrecord_bit_saldo&quot;).ToString()]" />
                                                            <ueab:WriteCellX AutoIncrementRow="True" Cell="[Fila.ByField(&quot;FECHA EFECTIVA DE PAGO &quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,201" sap2010:WorkflowViewState.IdRef="WriteCellX_3" Value="[currentJToken(&quot;custrecord_bit_fecha_real_pago&quot;).ToString()]" />
                                                            <ueab:WriteCellX AutoIncrementRow="True" Cell="[Fila.ByField(&quot;OBSERVACIÓN FINANCIERA&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,201" sap2010:WorkflowViewState.IdRef="WriteCellX_4" Value="[currentJToken(&quot;custrecord_bit_pagado_con&quot;).ToString()]" />
                                                            <ueab:WriteCellX AutoIncrementRow="True" Cell="[Fila.ByField(&quot;FECHA APROBACION FINANCIERA&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,201" sap2010:WorkflowViewState.IdRef="WriteCellX_5" Value="[DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)]" />
                                                            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,131" sap2010:WorkflowViewState.IdRef="WriteLine_62" Text="[&quot;Valor&quot; +ItemInvoiceRange(&quot;FACTURA&quot;).ToString() + &quot;ITEM:&quot; + countInvoiceRange.ToString + &quot;TRUE&quot;]" />
                                                            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,131" sap2010:WorkflowViewState.IdRef="WriteLine_63" Text="[&quot;Valor&quot; + currentJToken(&quot;custrecord_bit_n_factura&quot;).ToString() + &quot;ITEM:&quot; +countConvertedArrayData.ToString + &quot;TRUE&quot;]" />
                                                            <Assign sap:VirtualizedContainerService.HintSize="434,123" sap2010:WorkflowViewState.IdRef="Assign_11">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:Int32">[count + 1]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,131" sap2010:WorkflowViewState.IdRef="WriteLine_68" Text="[count.ToString + &quot;contador&quot;]" />
                                                            <ui:Break sap:VirtualizedContainerService.HintSize="434,48" sap2010:WorkflowViewState.IdRef="Break_1" />
                                                          </Sequence>
                                                        </If.Then>
                                                        <If.Else>
                                                          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,330" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="354,131" sap2010:WorkflowViewState.IdRef="WriteLine_64" Text="[&quot;Valor: &quot; +ItemInvoiceRange(&quot;FACTURA&quot;).ToString() + &quot;ITEM&quot; +countInvoiceRange.ToString + &quot;FALSE&quot;]" />
                                                            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="354,114" sap2010:WorkflowViewState.IdRef="WriteLine_65" Text="[&quot;Valor: &quot; + currentJToken(&quot;custrecord_bit_n_factura&quot;).ToString() +  &quot;ITEM&quot; + countConvertedArrayData.ToString + &quot;FALSE&quot;]" />
                                                          </Sequence>
                                                        </If.Else>
                                                      </If>
                                                    </Sequence>
                                                  </ActivityAction>
                                                </ui:ForEach.Body>
                                              </ui:ForEach>
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEachRow.Body>
                                </ui:ForEachRow>
                              </Sequence>
                            </ActivityAction>
                          </ueab:ExcelForEachRowX.Body>
                        </ueab:ExcelForEachRowX>
                      </Sequence>
                    </ActivityAction>
                  </ueab:ExcelApplicationCard.Body>
                </ueab:ExcelApplicationCard>
              </Sequence>
            </ActivityAction>
          </ueab:ExcelProcessScopeX.Body>
        </ueab:ExcelProcessScopeX>
      </Sequence>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">430,157.5</av:Point>
          <av:Size x:Key="ShapeSize">200,25</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">530,182.5 530,267.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Use document delivery of reports 2023" sap:VirtualizedContainerService.HintSize="825,3966" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
        <ueab:ExcelProcessScopeX.Body>
          <ActivityAction x:TypeArguments="ui:IExcelProcess">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="791,3879" sap2010:WorkflowViewState.IdRef="Sequence_86">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="729,3794" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" KeepExcelFileOpen="True" ResizeWindow="None" TemplatePath="C:\Users\duvan.sanabria\Downloads\Documento Uipath\ENTREGA DE INFORMES 2023.xlsx" WorkbookPath="C:\Users\duvan.sanabria\OneDrive - Servimeters\Documentos Uipath\ENTREGA DE INFORMES 2023.xlsx">
                <ueab:ExcelApplicationCard.Body>
                  <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="695,3498" sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="sd:DataTable" Name="dataTableReports" />
                        <Variable x:TypeArguments="x:String" Name="facturaSinTab" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueab:FilterX ClearFilter="False" ColumnName="OBSERVACIONES COMERCIAL" DisplayName="Commercial observation column filter" HasHeaders="True" sap:VirtualizedContainerService.HintSize="633,211" sap2010:WorkflowViewState.IdRef="FilterX_1" Range="[Excel.Sheet(&quot;2022-2023&quot;)]">
                        <ueab:FilterX.FilterArgument>
                          <ueabf:FilterArgument Mode="Basic">
                            <ueabf:FilterArgument.AdvancedFiltersArgument>
                              <ueabf:AdvancedFilterArgument LogicalOperator="And">
                                <ueabf:AdvancedFilterArgument.Condition1>
                                  <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                </ueabf:AdvancedFilterArgument.Condition1>
                                <ueabf:AdvancedFilterArgument.Condition2>
                                  <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                </ueabf:AdvancedFilterArgument.Condition2>
                              </ueabf:AdvancedFilterArgument>
                            </ueabf:FilterArgument.AdvancedFiltersArgument>
                            <ueabf:FilterArgument.BasicFiltersArgument>
                              <ueabf:BasicFilterArgument>
                                <ueabf:BasicFilterArgument.BasicFilters>
                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="1">
                                    <InArgument x:TypeArguments="x:String">FACTURA PAGA</InArgument>
                                  </scg:List>
                                </ueabf:BasicFilterArgument.BasicFilters>
                              </ueabf:BasicFilterArgument>
                            </ueabf:FilterArgument.BasicFiltersArgument>
                          </ueabf:FilterArgument>
                        </ueab:FilterX.FilterArgument>
                      </ueab:FilterX>
                      <ueab:FilterX ClearFilter="False" ColumnName="FECHA APROBACION FINANCIERA" DisplayName="Approval date column filter" HasHeaders="True" sap:VirtualizedContainerService.HintSize="633,211" sap2010:WorkflowViewState.IdRef="FilterX_2" Range="[Excel.Sheet(&quot;2022-2023&quot;)]">
                        <ueab:FilterX.FilterArgument>
                          <ueabf:FilterArgument Mode="Basic">
                            <ueabf:FilterArgument.AdvancedFiltersArgument>
                              <ueabf:AdvancedFilterArgument LogicalOperator="And">
                                <ueabf:AdvancedFilterArgument.Condition1>
                                  <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                </ueabf:AdvancedFilterArgument.Condition1>
                                <ueabf:AdvancedFilterArgument.Condition2>
                                  <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                </ueabf:AdvancedFilterArgument.Condition2>
                              </ueabf:AdvancedFilterArgument>
                            </ueabf:FilterArgument.AdvancedFiltersArgument>
                            <ueabf:FilterArgument.BasicFiltersArgument>
                              <ueabf:BasicFilterArgument>
                                <ueabf:BasicFilterArgument.BasicFilters>
                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="1">
                                    <InArgument x:TypeArguments="x:String">
                                      <Literal x:TypeArguments="x:String" Value="" />
                                    </InArgument>
                                  </scg:List>
                                </ueabf:BasicFilterArgument.BasicFilters>
                              </ueabf:BasicFilterArgument>
                            </ueabf:FilterArgument.BasicFiltersArgument>
                          </ueabf:FilterArgument>
                        </ueab:FilterX.FilterArgument>
                      </ueab:FilterX>
                      <ueab:ReadRangeX DisplayName="Read reports range" sap:VirtualizedContainerService.HintSize="633,211" sap2010:WorkflowViewState.IdRef="ReadRangeX_3" Range="[Excel.Sheet(&quot;2022-2023&quot;).Range(&quot;A:N&quot;)]" ReadFormatting="Default" SaveTo="[dataTableReports]" />
                      <ueab:ReadRangeX DisplayName="Read invoice range" sap:VirtualizedContainerService.HintSize="633,211" sap2010:WorkflowViewState.IdRef="ReadRangeX_2" Range="[Excel.Sheet(&quot;2022-2023&quot;).Range(&quot;I:I&quot;)]" ReadFormatting="Default" SaveTo="[invoiceRange]" />
                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="' Obtener todos los valores de la columna &quot;FACTURA&quot; como una lista de cadenas&#xA;Dim facturas As List(Of String) = invoiceRange.AsEnumerable().Select(Function(row) row.Field(Of String)(&quot;FACTURA&quot;)).ToList()&#xA;&#xA;' Reemplazar los caracteres de tabulación en cada factura&#xA;facturas = facturas.ConvertAll(Function(factura) factura.Replace(vbTab, &quot;&quot;))&#xA;&#xA;' Actualizar los valores en la columna &quot;FACTURA&quot; de la DataTable&#xA;For i As Integer = 0 To facturas.Count - 1&#xA;    invoiceRange.Rows(i)(&quot;FACTURA&quot;) = facturas(i).Trim() ' Aplicar Trim() al valor antes de asignarlo&#xA;Next&#xA;&#xA;'Imprimir los nuevos valores con los cambios realizados&#xA;'For Each row As DataRow In invoiceRange.Rows&#xA;    'Console.WriteLine(row(&quot;FACTURA&quot;).ToString().Trim()) ' Aplicar Trim() al valor antes de imprimirlo&#xA;'Next" DisplayName="Remove spaces from invoices" sap:VirtualizedContainerService.HintSize="633,205" sap2010:WorkflowViewState.IdRef="InvokeCode_8">
                        <ui:InvokeCode.Arguments>
                          <InOutArgument x:TypeArguments="x:String" x:Key="facturaSinTab">[facturaSinTab]</InOutArgument>
                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="invoiceRange">[invoiceRange]</InOutArgument>
                        </ui:InvokeCode.Arguments>
                      </ui:InvokeCode>
                      <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;Translado de Datos&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="633,201" sap2010:WorkflowViewState.IdRef="WriteRangeX_4" IgnoreEmptySource="True" Source="[dataTableReports]" />
                      <ueab:InsertColumnX DisplayName="Insert Column Saldo" HasHeaders="True" sap:VirtualizedContainerService.HintSize="633,251" sap2010:WorkflowViewState.IdRef="InsertColumnX_6" NewColumnName="SALDO" Range="[Excel.Sheet(&quot;Translado de Datos&quot;)]" RelativeColumnName="FECHA ACTUALIZADO" RelativePosition="After">
                        <ueab:InsertColumnX.ColumnFormat>
                          <ueab:GeneralFormat />
                        </ueab:InsertColumnX.ColumnFormat>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ueab:InsertColumnX>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="633,392" sap2010:WorkflowViewState.IdRef="CommentOut_8">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416,273" sap2010:WorkflowViewState.IdRef="Sequence_88">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeCode ContinueOnError="{x:Null}" Code="' Inicializar la aplicación Excel&#xD;&#xA;Dim xlApp As New Microsoft.Office.Interop.Excel.Application&#xD;&#xA;Dim xlWorkbook As Microsoft.Office.Interop.Excel.Workbook = Nothing&#xD;&#xA; sheetExists = False&#xD;&#xA;&#xD;&#xA;Try&#xD;&#xA;    ' No abrir el archivo Excel aquí&#xD;&#xA;    &#xD;&#xA;    ' Verificar si el archivo existe&#xD;&#xA;    xlWorkbook = xlApp.Workbooks.Open(&quot;C:\Users\duvan.sanabria\OneDrive - Servimeters\Documentos Uipath\ENTREGA DE INFORMES 2023.xlsx&quot;, True, True)&#xD;&#xA;&#xD;&#xA;    ' Verificar si la hoja existe&#xD;&#xA;    For Each xlWorksheet As Microsoft.Office.Interop.Excel.Worksheet In xlWorkbook.Sheets&#xD;&#xA;        If xlWorksheet.Name = &quot;Translado de Datos&quot; Then&#xD;&#xA;            sheetExists = True&#xD;&#xA;            Exit For&#xD;&#xA;        End If&#xD;&#xA;    Next&#xD;&#xA;&#xD;&#xA;    ' Imprimir el resultado de la verificación&#xD;&#xA;    If sheetExists Then&#xD;&#xA;        Console.WriteLine(&quot;La hoja 'Translado de Datos' existe.&quot;)&#xD;&#xA;    Else&#xD;&#xA;        Console.WriteLine(&quot;La hoja 'Translado de Datos' no existe.&quot;)&#xD;&#xA;    End If&#xD;&#xA;&#xD;&#xA;Catch ex As Exception&#xD;&#xA;    Throw New Exception(&quot;Error al verificar la existencia de la hoja: &quot; &amp; ex.Message)&#xD;&#xA;&#xD;&#xA;Finally&#xD;&#xA;    ' Cerrar la aplicación Excel&#xD;&#xA;    If xlWorkbook IsNot Nothing Then&#xD;&#xA;        xlWorkbook.Close(False)&#xD;&#xA;    End If&#xD;&#xA;    &#xD;&#xA;    If xlApp IsNot Nothing Then&#xD;&#xA;        xlApp.Quit()&#xD;&#xA;        System.Runtime.InteropServices.Marshal.ReleaseComObject(xlApp)&#xD;&#xA;    End If&#xD;&#xA;End Try&#xD;&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="354,188" sap2010:WorkflowViewState.IdRef="InvokeCode_6">
                              <ui:InvokeCode.Arguments>
                                <InOutArgument x:TypeArguments="x:Boolean" x:Key="sheetExists">
                                  <VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="sheetExists" />
                                </InOutArgument>
                              </ui:InvokeCode.Arguments>
                            </ui:InvokeCode>
                          </Sequence>
                        </ui:CommentOut.Body>
                      </ui:CommentOut>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="633,1520" sap2010:WorkflowViewState.IdRef="CommentOut_9">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="597,1418" sap2010:WorkflowViewState.IdRef="Sequence_89">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[sheetExists = True]" sap:VirtualizedContainerService.HintSize="535,1333" sap2010:WorkflowViewState.IdRef="If_6">
                              <If.Then>
                                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="501,651" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ueab:DeleteSheetX DisplayName="Delete Sheet" sap:VirtualizedContainerService.HintSize="439,131" sap2010:WorkflowViewState.IdRef="DeleteSheetX_3" Sheet="[Excel.Sheet(&quot;Translado de Datos&quot;)]" />
                                  <ueab:WriteRangeX Append="True" Destination="[Excel.Sheet(&quot;Translado de Datos&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="439,201" sap2010:WorkflowViewState.IdRef="WriteRangeX_3" IgnoreEmptySource="False" Source="[dataTableReports]" />
                                  <ueab:InsertColumnX ColumnFormat="{x:Null}" DisplayName="Insert Column Saldo" HasHeaders="True" sap:VirtualizedContainerService.HintSize="439,234" sap2010:WorkflowViewState.IdRef="InsertColumnX_5" NewColumnName="SALDO" Range="[Excel.Sheet(&quot;Translado de Datos&quot;)]" RelativeColumnName="[Excel.Sheet(&quot;Translado de Datos&quot;).Cell(&quot;K1&quot;)]" RelativePosition="After" />
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="501,520" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;Translado de Datos&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="439,201" sap2010:WorkflowViewState.IdRef="WriteRangeX_2" IgnoreEmptySource="True" Source="[dataTableReports]" />
                                  <ueab:InsertColumnX DisplayName="Insert Column Saldo" HasHeaders="True" sap:VirtualizedContainerService.HintSize="439,234" sap2010:WorkflowViewState.IdRef="InsertColumnX_2" NewColumnName="SALDO" Range="[Excel.Sheet(&quot;Translado de Datos&quot;)]" RelativeColumnName="FECHA ACTUALIZADO" RelativePosition="After">
                                    <ueab:InsertColumnX.ColumnFormat>
                                      <ueab:NumberFormat DecimalPlaces="2" UseThousandSeparator="False" />
                                    </ueab:InsertColumnX.ColumnFormat>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ueab:InsertColumnX>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </ui:CommentOut.Body>
                      </ui:CommentOut>
                    </Sequence>
                  </ActivityAction>
                </ueab:ExcelApplicationCard.Body>
              </ueab:ExcelApplicationCard>
            </Sequence>
          </ActivityAction>
        </ueab:ExcelProcessScopeX.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ueab:ExcelProcessScopeX>
      <FlowStep.Next>
        <x:Reference>__ReferenceID0</x:Reference>
      </FlowStep.Next>
    </FlowStep>
  </Flowchart>
</Activity>